<?xml version="1.0" encoding="utf-8"?>
<xs:schema targetNamespace="http://www.energistics.org/energyml/data/resqmlv2" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:resqml="http://www.energistics.org/energyml/data/resqmlv2" xmlns:eml="http://www.energistics.org/energyml/data/commonv2" version="2.0.1" elementFormDefault="qualified">
	<!--														-->
	<xs:include schemaLocation="Properties.xsd"/>
	<!--														-->
	<xs:import namespace="http://www.energistics.org/energyml/data/commonv2" schemaLocation="../../../commonv2/v2.0/xsd_schemas/AllCommonObjects.xsd"/>
	<xs:include schemaLocation="Representations.xsd"/>
	<xs:include schemaLocation="Wells.xsd"/>
	<xs:include schemaLocation="Grids.xsd"/>
	<xs:include schemaLocation="Technical.xsd"/>
	<xs:include schemaLocation="Common.xsd"/>
	<xs:complexType name="StreamlinePolylineSetPatch">
		<xs:annotation>
			<xs:documentation>A patch containing a set of polylines.

For performance reasons, the geometry of each patch is described in only one 1D array of 3D points, which aggregates the nodes of all the polylines together.

To be able to separate the polyline descriptions, additional information is added about the type of each polyline (closed or not) and the number of 3D points (node count) of each polyline. 

This additional information is contained in two arrays which are associated with each polyline set patch. The dimension of these arrays is the number of polylines gathered in one polyline set patch. 

	- The first array contains a Boolean for each polyline (closed or not closed) 
	- The second array contains the count of nodes for each polyline. </xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="resqml:Patch">
				<xs:sequence>
					<xs:element name="NodeCount" type="xs:positiveInteger" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Total number of nodes.

BUSINESS RULE: Should be equal to the sum of the number of nodes per polyline</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="IntervalCount" type="xs:positiveInteger" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Total number of intervals.

BUSINESS RULE: Should be equal to the sum of the count of intervals per polyline.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ClosedPolylines" type="resqml:AbstractBooleanArray" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Indicates whether a polyline is closed.

If closed, then the interval count for that polyline is equal to the node count.

If open, then the interval count for that polyline is one less than the node count.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="NodeCountPerPolyline" type="resqml:AbstractIntegerArray" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The first number in the list defines the node count for the first polyline in the polyline set patch.
The second number in the list defines the node count for the second polyline in the polyline set patch.
etc.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="IntervalGridCells" type="resqml:IntervalGridCells" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="obj_StreamlinesFeature">
		<xs:annotation>
			<xs:documentation>Specification of the vector field upon which the streamlines are based. Streamlines are commonly used to trace the flow of phases (water / oil / gas / total) based upon their flux at a specified time. They may also be used for trace components for compositional simulation, e.g., CO2, or temperatures for thermal simulation.

The flux enumeration provides support for the most usual cases with provision for extensions to other fluxes.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="resqml:AbstractTechnicalFeature">
				<xs:sequence>
					<xs:element name="Flux" type="resqml:StreamlineFlux" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Specification of the streamline flux, drawn from the enumeration.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="OtherFlux" type="xs:string" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Optional specification of the streamline flux, if an extension is required beyond the enumeration.

BUSINESS RULE: OtherFlux should appear if Flux has the value of other.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="TimeIndex" type="resqml:TimeIndex" minOccurs="1" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="obj_StreamlinesRepresentation">
		<xs:annotation>
			<xs:documentation>Representation of streamlines associated with a streamline feature and interpretation.

Use StreamlinesFeature to define the vector field that supports the streamlines, i.e., describes what flux is being traced.

Use Interpretation to distinguish between shared and differing interpretations.

Usage Note: When defining streamline geometry, the PatchIndex will not be referenced, and may be set to a value of 0.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="resqml:AbstractRepresentation">
				<xs:sequence>
					<xs:element name="LineCount" type="xs:positiveInteger" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>Number of streamlines.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="StreamlineWellbores" type="resqml:StreamlineWellbores" minOccurs="0" maxOccurs="1"/>
					<xs:element name="Geometry" type="resqml:StreamlinePolylineSetPatch" minOccurs="0" maxOccurs="1"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="StreamlineWellbores">
		<xs:annotation>
			<xs:documentation>The information that allows you to locate, on one or several grids (existing or planned), the intersection of volume (cells) and surface (faces) elements with a wellbore trajectory (existing or planned).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="InjectorPerLine" type="resqml:AbstractIntegerArray" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Size of array = LineCount.

Null values of -1 signify that that line does not initiate at a injector, e.g., it may come from fluid expansion or an aquifer.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProducerPerLine" type="resqml:AbstractIntegerArray" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Size of array = LineCount. 

Null values of -1 signify that that line does not terminate at a producer, e.g., it may approach a stagnation area.

BUSINESS RULE: The cell count must equal the number of non-null entries in this array.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WellboreTrajectoryRepresentation" type="eml:DataObjectReference" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="IntervalGridCells">
		<xs:annotation>
			<xs:documentation>Specifies the (Grid,Cell) intersection of each Interval of the representation, if any.

The information allows you to locate, on one or several grids, the intersection of volume (cells) and surface (faces) elements with a wellbore trajectory (existing or planned), streamline trajectories, or any polyline set.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="CellCount" type="xs:positiveInteger" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The number of non-null entries in the grid indices array.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridIndices" type="resqml:AbstractIntegerArray" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Size of array = IntervalCount. 
Null values of -1 signify that that interval is not within a grid. 
BUSINESS RULE: The cell count must equal the number of non-null entries in this array.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CellIndices" type="resqml:AbstractIntegerArray" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The cell index for each interval of a representation. The grid index is specified by grid index array, to give the (Grid,Cell) index pair.

BUSINESS RULE: Array length must equal cell count.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LocalFacePairPerCellIndices" type="resqml:AbstractIntegerArray" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>For each cell, these are the entry and exit intersection faces of the trajectory in the cell. Use null (-1) for missing intersections, e.g., when a trajectory originates or terminates within a cell. The local face-per-cell index is used because a global face index need not have been defined on the grid.

BUSINESS RULE: The array dimensions must equal 2 x CellCount.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Grids" type="eml:DataObjectReference" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="StreamlineFlux">
		<xs:annotation>
			<xs:documentation>Enumeration of the usual streamline fluxes</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="oil">
				<xs:annotation>
					<xs:documentation>Oil Phase flux</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="gas">
				<xs:annotation>
					<xs:documentation>Gas Phase flux</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="water">
				<xs:annotation>
					<xs:documentation>Water Phase flux</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="total">
				<xs:annotation>
					<xs:documentation>Sum of (Water + Oil + Gas) Phase fluxes</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="other">
				<xs:annotation>
					<xs:documentation>Used to indicate that another flux is being traced.

BUSINESS RULE: OtherFlux should appear if this value is specified.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<!--														-->
	<!-- Energistics License Agreement
			This file is distributed under the Energistics License Agreement at
			http://www.energistics.org
			Use of this file constitutes agreement with the Energistics License Agreement.
			Copyright (c) 2015 Energistics. All rights reserved.
			Energistics, WITSML, PRODML and RESQML are trademarks or registered trademarks of Energistics.
			-->
	<!--														-->
	</xs:schema>
