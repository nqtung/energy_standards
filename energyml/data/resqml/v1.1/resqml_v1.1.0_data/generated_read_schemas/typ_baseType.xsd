<?xml version="1.0" encoding="utf-8"?>
<xsd:schema
	elementFormDefault="qualified"
	attributeFormDefault="unqualified"
	targetNamespace="http://www.resqml.org/schemas/1series"
	xmlns:resqml="http://www.resqml.org/schemas/1series"
	xmlns:abs="http://www.energistics.org/schemas/abstract"
	xmlns:gml="http://www.opengis.net/gml/3.2"
	xmlns:dc="http://purl.org/dc/terms/"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	version="RESQML_v1.1">
   <!-- Energistics License Agreement
        This file is distributed under the Energistics License Agreement at
        http://www.energistics.org
        Use of this file constitutes agreement with the Energistics License Agreement.
        Copyright (c) 2011 Energistics. All rights reserved.
        Energistics, WITSML, PRODML and RESQML are trademarks or registered trademarks of Energistics.
        -->
   <!--                                                         -->
   <xsd:annotation>
      <xsd:documentation />
   </xsd:annotation>
   <!--                                                         -->
   <!-- ================= ABSTRACT BASE TYPES ================= -->
   <!--                                                         -->
   <xsd:simpleType name="abstractString">
      <xsd:annotation>
         <xsd:documentation>The intended abstract supertype of all strings. This abstract type allows the control over whitespace for all strings to be defined at a high level.
         This type should not be used directly except to derive another type.</xsd:documentation>
      </xsd:annotation>
      <xsd:restriction base="xsd:string">
         <xsd:whiteSpace value="collapse">
            <xsd:annotation>
               <xsd:documentation>Replace tab, line feed and carriage return with a space, collapse contiguous sequences of spaces to a single space and then remove leading and
               trailing spaces.</xsd:documentation>
            </xsd:annotation>
         </xsd:whiteSpace>
         <xsd:minLength value="1">
            <xsd:annotation>
               <xsd:documentation>The empty string is not allowed. This constraint conbined with the whiteSpace collapse constraint means that a blank value is not
               allowed.</xsd:documentation>
            </xsd:annotation>
         </xsd:minLength>
      </xsd:restriction>
   </xsd:simpleType>
   <!--                                                         -->
   <xsd:simpleType name="abstractMaximumLengthString">
      <xsd:annotation>
         <xsd:documentation>This defines the maximum acceptable length of a string that can be stored in a data base.</xsd:documentation>
      </xsd:annotation>
      <xsd:restriction base="resqml:abstractString">
         <xsd:maxLength value="4000">
            <xsd:annotation>
               <xsd:documentation>This value should be the smallest "maximum size of a variable length character type" in commonly used DBMSs. This is the maximum size of a
               VARCHAR2 in Oracle 8.</xsd:documentation>
            </xsd:annotation>
         </xsd:maxLength>
      </xsd:restriction>
   </xsd:simpleType>
   <!--                                                         -->
   <!-- ======= CONTENT SPECIFIC ABSTRACT STRING TYPES  ======= -->
   <!--                                                         -->
   <xsd:simpleType name="abstractNameString">
      <xsd:annotation>
         <xsd:documentation>The intended abstract supertype of all user assigned human recognizable contextual name types. There should be no assumption that (interoperable)
         semantic information will be extracted from the name by a third party. This type of value is generally not guaranteed to be unique and is not a candidate to be replaced
         by an enumeration.</xsd:documentation>
      </xsd:annotation>
      <xsd:restriction base="resqml:abstractString">
         <xsd:maxLength value="64" />
      </xsd:restriction>
   </xsd:simpleType>
   <!--                                                         -->
   <xsd:simpleType name="abstractUidString">
      <xsd:annotation>
         <xsd:documentation>The intended abstract supertype of all locally unique identifiers. The value is not intended to convey any semantic content (e.g., it may be computer
         generated). The value is only required to be unique within a context in a document (e.g., defined via key and keyref). There is no guarantee that the same data in
         multiple documents will utilize the same uid value unless enforced by the source of the document (e.g., a document server). Spaces are not allowed.</xsd:documentation>
      </xsd:annotation>
      <xsd:restriction base="resqml:abstractString">
         <xsd:maxLength value="64" />
         <xsd:pattern value="[^ ]*" />
      </xsd:restriction>
   </xsd:simpleType>
   <!--                                                         -->
   <xsd:simpleType name="abstractCommentString">
      <xsd:annotation>
         <xsd:documentation>The intended abstract supertype of all comments or remarks intended for human consumption. There should be no assumption that semantics can be
         extracted from the field by a computer. Neither should there be an assumption that any two humans will interpret the information in the same way (i.e., it may not be
         interoperable).</xsd:documentation>
      </xsd:annotation>
      <xsd:restriction base="resqml:abstractMaximumLengthString" />
   </xsd:simpleType>
   <!--                                                         -->
   <xsd:simpleType name="abstractDescriptionString">
      <xsd:annotation>
         <xsd:documentation>A textual description of something.</xsd:documentation>
         <xsd:appinfo>Modified-in-version=1.4.0, By-issue=1.3.1-33, Change=Added</xsd:appinfo>
      </xsd:annotation>
      <xsd:restriction base="resqml:abstractString">
         <xsd:maxLength value="256" />
      </xsd:restriction>
   </xsd:simpleType>
   <!--                                                         -->
   <xsd:simpleType name="abstractTypeEnum">
      <xsd:annotation>
         <xsd:documentation>The intended abstract supertype of all enumerated "types". This abstract type allows the maximum length of a type enumeration to be centrally defined.
         This type should not be used directly except to derive another type. It should also be used for uncontrolled strings which are candidates to become enumerations at a
         future date.</xsd:documentation>
      </xsd:annotation>
      <xsd:restriction base="resqml:abstractString">
         <xsd:maxLength value="40" />
      </xsd:restriction>
   </xsd:simpleType>
   <!--                                                         -->
   <xsd:simpleType name="abstractUomEnum">
      <xsd:annotation>
         <xsd:documentation>The intended abstract supertype of all "units of measure". This abstract type allows the maximum length of a UOM enumeration to be centrally defined.
         This type is abstract in the sense that it should not be used directly except to derive another type.</xsd:documentation>
      </xsd:annotation>
      <xsd:restriction base="resqml:abstractString">
         <xsd:maxLength value="24" />
      </xsd:restriction>
   </xsd:simpleType>
   <!--                                                         -->
</xsd:schema>
